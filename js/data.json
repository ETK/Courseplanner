var data = [{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7db" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "Any Computer Science course", "long_description" : "Humans have solved problems for millennia on computing devices by representing data as diverse numbers, text, images, sound and genomes, and then transforming the data. A gentle introduction to designing programs (recipes)for systematically solving problems that crop up in diverse domains such as science, literature and graphics. Social and intellectual issues raised by computing. Algorithms, hardware, software, operating systems, the limits of computation.", "short_description" : "Computational Thinking[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC104H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7dc" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC120H1, CSC148H1,CSC150H1", "long_description" : "Structure of computers; the computing environment. Programming in a language such as Python. Program structure: elementary data types, statements, control flow, functions, classes, objects, methods, fields. Lists; searching, sorting and complexity. Practical (P) sections consist of supervised work in the computing laboratory. These sections are offered when facilities are available, and attendance is required.", "short_description" : "Introduction to Computer Programming[36L/12T/12P]", "distribution" : "This is a Science course", "course_code" : "CSC108H1", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "100/A", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 5101\nTHURSDAY 18:00-21:00\nC Hagerman\nBA 1170\n120\nTut 0101\nWEDNESDAY 16:00-18:00\n\n64\nTut 0201\nTHURSDAY 14:00-16:00\n\n64", "Campus" : "St. George" } ], "Title" : "CSC108H1: Introduction to Computer Programming" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7dd" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "Any CSC course", "long_description" : "An introduction to computer science for students in other sciences, with an emphasis on gaining practical skills. Introduction to programming withexamples and exercises appropriate to the sciences; web programming; software tools. Topics from: database design, considerations in numerical calculation,using UNIX/LINUX systems. At the end of this course you will be able to develop computer tools for scientific applications, such as the structuring and analysis of experimental data. With some additional preparation, you will also be ready to go on to CSC148H1. Practical (P)sections consist of supervised work in the computer laboratory. No programming experience is necessary.", "short_description" : "Computer Science for the Sciences[24L/12P]", "distribution" : "This is a Science course", "course_code" : "CSC120H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7de" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC150H1; you may not take this course after taking more than two CSC courses at the 200-level or higher", "long_description" : "Abstract data types and data structures for implementing them. Linked data structures. Encapsulation and information-hiding. Object-oriented programming.Specifications. Analyzing the efficiency of programs. Recursion. This course assumes programming experience in a language such as Python, C++, or Java, as provided by CSC108H1. Students who already have this background may consult the Computer Science Undergraduate Office for advice about skipping CSC108H1. Practical (P) sections consist of supervised work in the computing laboratory. These sections are offered when facilities are available, and attendance is required. NOTE:Students may go to their college to drop down from CSC148H1 to CSC108H1. See above for the drop down deadline.", "short_description" : "Introduction to Computer Science[24L/12T/12P]", "distribution" : "This is a Science course", "course_code" : "CSC148H1", "prerequisite" : "CSC108H1", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "100/A", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nTHURSDAY 16:00-18:00\nJ Lung\nBA 1180\n120\nTut 0101\nTUESDAY 16:00-18:00\n\n32\nTut 0201\nWEDNESDAY 14:00-16:00\n\n32\nTut 5101\nTUESDAY 18:00-20:00\n\n64", "Campus" : "St. George" } ], "Title" : "CSC148H1: Introduction to Computer Science" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7df" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC236H1, CSC240H1;MAT102H5 (University of Toronto Mississauga)", "long_description" : "Introduction to abstraction and rigour. Informal introduction to logical notation and reasoning. Understanding, using and developing precise expressions of mathematical ideas, including definitions and theorems.Structuring proofs to improve presentation and comprehension. General problem-solving techniques. Running time analysis of iterative programs. Formal definition of Big-Oh. Diagonalization, the Halting Problem, and some reductions. Unified approaches to programming and theoretical problems.", "corequisite" : "CSC108H1/CSC148H1", "short_description" : "Mathematical Expression and Reasoning for Computer Science[36L/24T]", "distribution" : "This is a Science course", "course_code" : "CSC165H1", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "100/A", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 5101\nTUESDAY 16:00-18:00\nWEDNESDAY 18:00-21:00\nM Guerzhoy\nBA 1170\nBA 1190\n120", "Campus" : "St. George" } ], "Title" : "CSC165H1: Mathematical Expression and Reasoning for Computer Science" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e0" }, "breadth" : "Society and its Institutions (3) + The Physical and Mathematical Universes (5)", "long_description" : "The course will provide an informal, but rigourous treatment of a variety of topics, introducing students to the relevant background in graph theory,social network formation, incentives and game theory, and providing exposure to the relevant mathematical and computational tools required to analyze relevant phenomenon. Topics may include: structural analysis of social networks, matching markets, trading networks, web search, information cascades, prediction markets, and online advertising, among others.", "short_description" : "Economic and Social Networks: Models and Applications[48L/24T]", "distribution" : "This is a Science course", "course_code" : "CSC200Y1", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "200/B", "session_data" : [ { "Term" : "2014 Fall", "session_type" : "Y", "Last updated" : "2014-07-15 14:53:20.0", "session_code" : "20149", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nMONDAY 15:00-16:00\nWEDNESDAY 15:00-16:00\nFRIDAY 15:00-16:00\nA Borodin\nC Boutilier\nLM 161\nLM 161\nLM 161\n100\n15", "Campus" : "St. George" }, { "Term" : "2015 Winter", "session_type" : "Y", "Last updated" : "2014-07-15 17:53:18.0", "session_code" : "20151", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nMONDAY 15:00-16:00\nWEDNESDAY 15:00-16:00\nFRIDAY 15:00-16:00\nA Borodin\nC Boutilier\nLM 161\nLM 161\nLM 161\n100\n0", "Campus" : "St. George" } ], "Title" : "CSC200Y1: Economic and Social Networks: Models and Applications" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e1" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "An introduction to software design and development concepts, methods, and tools using a statically-typed object-oriented programming language such as Java. Topics from: version control, unit testing, refactoring, object-oriented design and development, design patterns, advanced IDE usage, regular expressions, and reflection. Representation of ï¬‚oating-point numbers and introduction to numerical computation.", "short_description" : "Software Design[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC207H1", "prerequisite" : "SC148H1/CSC150H1", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "200/B", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 5101\nTUESDAY 18:00-20:00\nTUESDAY 20:00-21:00\nA Attarwala\nBA 1170\nBA 1170\n120", "Campus" : "St. George" } ], "Title" : "CSC207H1: Software Design" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e2" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC372H1, CSC369H1,CSC469H1", "long_description" : "Software techniques in a Unix-style environment, using scripting languages and a machine-oriented programming language (typically C). What goes on in the operating system when programs are executed. Core topics: creating and using software tools, pipes and filters, file processing, shell programming,processes, system calls, signals, basic network programming.", "short_description" : "Software Tools and Systems Programming[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC209H1", "prerequisite" : "CSC207H1/enrolment in Bioinformatics and Computational Biology (BCB) subject POSt", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "200/B", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 5101\nWEDNESDAY 18:00-20:00\nWEDNESDAY 20:00-21:00\nB Simion\nBA 1180\nBA 1180\n110", "Campus" : "St. George" } ], "Title" : "CSC209H1: Software Tools and Systems Programming" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e3" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC240H1", "long_description" : "The application of logic and proof techniques to Computer Science.Mathematical induction; correctness proofs for iterative and recursive algorithms; recurrence equations and their solutions (including the Master Theorem); introduction to automata and formal languages. This course assumes university-level experience with proof techniques and algorithmic complexity as provided by CSC165H1. Very strong students who already have this experience (e.g. successful completion of MAT157Y1) may consult the undergraduate office about proceeeding directly into CSC236H1.", "short_description" : "Introduction to the Theory of Computation[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC236H1", "prerequisite" : "SC148H1/CSC150H1,CSC165H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e4" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC236H1", "distribution" : "This is a Science course", "recommended" : "first term of MAT137Y1/MAT157Y1", "corequisite" : "CSC148H1/CSC150H1", "short_description" : "Enriched Introduction to the Theory of Computation[24L/12T]", "course_code" : "CSC240H1", "long_description" : "The rigorous application of logic and proof techniques to Computer Science.Propositional and predicate logic; mathematical induction and other basic proof techniques; correctness proofs for iterative and recursive algorithms;recurrence equations and their solutions (including the Master Theorem);introduction to automata and formal languages. This course covers the same topics as CSC236H1, together with selected material from CSC165H1, but at a faster pace, in greater depthand with more rigour, and with more challenging assignments. Greater emphasis will be placed on proofs and theoretical analysis. Certain topics briefly mentioned in CSC165H1 or CSC236H1 may be covered in more detail in this course,and some additional topics may also be covered." },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e5" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Computer structures, machine languages, instruction execution, addressing techniques, and digital representation of data. Computer system organization,memory storage devices, and microprogramming. Block diagram circuit realizations of memory, control and arithmetic functions. There are a number of laboratory periods in which students conduct experiments with digital logic circuits.", "short_description" : "Computer Organization[24L/12T/13P]", "distribution" : "This is a Science course", "course_code" : "CSC258H1", "prerequisite" : "SC148H1/CSC150H1,CSC165H1/CSC240H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e6" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC265H1", "long_description" : "Algorithm analysis: worst-case, average-case, and amortized complexity.Expected worst-case complexity, randomized quicksort and selection. Standard abstract data types, such as graphs, dictionaries, priority queues, and disjoint sets. A variety of data structures for implementing these abstract data types, such as balanced search trees, hashing, heaps, and disjoint forests. Design and comparison of data structures. Introduction to lower bounds.", "short_description" : "Data Structures and Analysis[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC263H1", "prerequisite" : "CSC207H1,CSC236H1/CSC240H1; STA247H1/STA255H1/STA257H1", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "200/B", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 5101\nTUESDAY 18:00-20:00\nTUESDAY 20:00-21:00\nY Zhang\nBA 1130\nBA 1130\n120", "Campus" : "St. George" } ], "Title" : "CSC263H1: Data Structures and Analysis" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e7" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC263H1", "distribution" : "This is a Science course", "corequisite" : "STA247H1/STA255H1/STA257H1", "short_description" : "Enriched Data Structures and Analysis[24L/12T]", "course_code" : "CSC265H1", "long_description" : "This course covers the same topics as CSC263H1, but at a faster pace, in greater depth and with more rigour, and with more challenging assignments. Greater emphasis will be placed on proofs,theoretical analysis, and creative problem-solving. Certain topics briefly mentioned in CSC263H1 may be covered in more detail in this course, and some additional topics may also be covered. Students without the exact course prerequisites but with a strong mathematical background are encouraged to consult the Department about the possibility of taking this course.", "prerequisite" : "CSC240H1 or an A- in CSC236H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e8" }, "breadth" : "Society and its Institutions (3)", "long_description" : "Privacy and Freedom of Information; recent Canadian legislation and reports.Computers and work; employment levels, quality of working life. Electronic fund transfer systems; transborder data flows. Computers and bureaucratization. Computers in the home; public awareness about computers.Robotics. Professionalism and the ethics of computers. The course is designed not only for science students, but also those in social sciences or humanities.", "short_description" : "Computers and Society[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC300H1", "prerequisite" : "Any half-course on computing" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7e9" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "An introduction to agile development methods appropriate for medium-sized teams and rapidly-moving projects. Basic software development infrastructure;requirements elicitation and tracking; estimation and prioritization; teamwork skills; basic UML; design patterns and refactoring; security, discussion of ethical issues, and professional responsibility.", "short_description" : "Introduction to Software Engineering[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC301H1", "prerequisite" : "CSC209H1,CSC263H1/CSC265H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7ea" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "An introduction to the theory and practice of large-scale software system design, development, and deployment. Project management; advanced UML; reverse engineering; requirements inspection; verification and validation; software architecture; performance modeling and analysis.", "short_description" : "Engineering Large Software Systems[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC302H1", "prerequisite" : "CSC301H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7eb" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "An introduction to software development on the web. Concepts underlying the development of programs that operate on the web; survey of technological alternatives; greater depth on some technologies. Operational concepts of the internet and the web, static client content, dynamic client content,dynamically served content, n-tiered architectures, web development processes,and security on the web. Assignments involve increasingly more complex web-based programs. Guest lecturers from leading e-commerce firms will describe the architecture and operation of their web sites.", "short_description" : "Programming on the Web[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC309H1", "prerequisite" : "CSC209H1,CSC343H1", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "300/C", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nTUESDAY 14:00-15:00\nTHURSDAY 14:00-16:00\nA Mashiyat\nBA 1190\nBA 1190\n90", "Campus" : "St. George" } ], "Title" : "CSC309H1: Programming on the Web" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7ec" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Measuring information. The source coding theorem. Data compression using ad hoc methods and dictionary-based methods. Probabilistic source models, and their use via Huffman and arithmetic coding. Noisy channels and the channel coding theorem. Error correcting codes, and their decoding by algebraic and probabilistic methods.", "short_description" : "Information Theory[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC310H1", "prerequisite" : "60% or higher in CSC148H1/CSC150H1(crs _csc.htm#CSC150H1)/CSC260H1; STA247H1/STA255H1/STA257H1/STA107H1; (MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1, MAT221H1/MAT223H1/MAT240H1(crs _mat.htm#MAT240H1)" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7ed" }, "breadth" : "None", "long_description" : "User-centred design of interactive systems; methodologies, principles, and metaphors; task analysis. Interdisciplinary design; the role of graphic design, industrial design, and the behavioural sciences. Interactive hardware and software; concepts from computer graphics. Typography, layout, colour,sound, video, gesture, and usability enhancements. Classes of interactive graphical media; direct manipulation systems, extensible systems, rapid prototyping tools. Students work on projects in interdisciplinary teams.Enrolment limited, but non-computer scientists welcome.", "recommended" : "CSC300H1 provides useful background for work in CSC318H1, so if you plan to take CSC300H1 then you should do it before CSC318H1", "short_description" : "The Design of Interactive Computational Media[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC318H1", "prerequisite" : "Any CSC half-course" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7ee" }, "breadth" : "None", "long_description" : "Image synthesis and image analysis aimed at students with an interest in computer graphics, computer vision or the visual arts. Focus on three major topics: (1) visual computing principles - computational and mathematical methods for creating, capturing, analyzing and manipulating digital photographs (image acquisition, basic image processing, image warping, anti-aliasing); (2) digital special effects - applying these principles to create special effects found in movies and commercials; (3) visual programming -using C/C++ and OpenGL to create graphical user interfaces for synthesizing and manipulating photographs. The course requires the ability to use differential calculus in several variables and linear algebra.", "short_description" : "Introduction to Visual Computing[24L/12P]", "distribution" : "This is a Science course", "course_code" : "CSC320H1", "prerequisite" : "SC209H1/(CSC207H1,proficiency in C or C++); (MAT135H1, MAT136H1(crs_ma t.htm#MAT136H1))/MAT135Y1/MAT137Y1/MAT157Y1, MAT221H1/MAT223H1/MAT240H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7ef" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "The first half of the course is about supervised learning for regression and classification problems and will include the perceptron learning procedure,backpropagation, and methods for ensuring good generalisation to new data. The second half of the course is about unsupervised learning methods that discover hidden causes and will include K-means, the EM algorithm, Boltzmann machines,and deep belief nets.", "short_description" : "Introduction to Neural Networks and Machine Learning[24L/12P]", "distribution" : "This is a Science course", "course_code" : "CSC321H1", "prerequisite" : "(MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1, MAT221H1/MAT223H1/MAT240H1; STA247H1/STA255H1/STA257H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7f0" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Programming principles common in modern languages; details of commonly used paradigms. The structure and meaning of code. Scope, control flow, datatypes and parameter passing. Two non-procedural, non-object-oriented programming paradigms: functional programming (illustrated by languages such as Lisp/Scheme, ML or Haskell) and logic programming (typically illustrated in Prolog).", "short_description" : "Principles of Programming Languages[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC324H1", "prerequisite" : "SC263H1/CSC265H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7f1" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC350H1, CSC351H1", "long_description" : "The study of computational methods for solving problems in linear algebra,non-linear equations, and approximation. The aim is to give students a basic understanding of both floating-point arithmetic and the implementation of algorithms used to solve numerical problems, as well as a familiarity withcurrent numerical computing environments.", "short_description" : "Numerical Methods[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC336H1", "prerequisite" : "SC148H1/CSC150H1;MAT133Y1(70%)/(MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1, MAT221H1/MAT223H1(crs_mat .htm#MAT223H1)/MAT240H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7f2" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC434H1", "long_description" : "Introduction to database management systems. The relational data model.Relational algebra. Querying and updating databases: the query language SQL.Application programming with SQL. Integrity constraints, normal forms, and database design. Elements of database system technology: query processing,transaction management.", "short_description" : "Introduction to Databases[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC343H1", "prerequisite" : "CSC165H1/CSC240H1/(MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1;CSC207H1 Prerequisite for Engineering students only:ECE345/CSC190/CSC192" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7f3" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Introduction to computer networks with an emphasis on fundamental principles.Basic understanding of computer networks and network protocols. Topics include network hardware and software, routing, addressing, congestion control,reliable data transfer, performance analysis, local area networks, and TCP/IP.", "short_description" : "Principles of Computer Networks[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC358H1", "prerequisite" : "CSC209H1,CSC258H1,CSC263H1/CSC265H1, STA247H1/STA255H1/STA257H1/ECO227Y1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7f4" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Principles of operating systems. The operating system as a control program and as a resource allocator. The concept of a process and concurrency problems:synchronization, mutual exclusion, deadlock. Additional topics include memory management, file systems, process scheduling, threads, and protection.", "short_description" : "Operating Systems[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC369H1", "prerequisite" : "CSC209H1,CSC258H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7f5" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Development of embedded software for control and monitoring. Techniques for efficient running of multiple real-time, critical multiple processes and for device control. Methods of working on small systems, such as microcontroller-based systems. Projects use microprocessors to control equipment with feedback from sensors. Design, implementation and testing of software using a language such as C. Ordinarily offered in years alternating withECE385H1.", "short_description" : "Microprocessor Software[24L/12T/36P]", "distribution" : "This is a Science course", "course_code" : "CSC372H1", "prerequisite" : "CSC209H1;CSC258H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7f6" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC375H1", "long_description" : "Standard algorithm design techniques: divide-and-conquer, greedy strategies,dynamic programming, linear programming, randomization, network flows,approximation algorithms. Brief introduction to NP-completeness: polynomial time reductions, examples of various NP-complete problems, self-reducibility.Students will be expected to show good design principles and adequate skills at reasoning about the correctness and complexity of algorithms.", "short_description" : "Algorithm Design, Analysis & Complexity[36L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC373H1", "prerequisite" : "SC263H1/CSC265H1", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "300/C", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 5101\nTUESDAY 18:00-20:00\nTHURSDAY 18:00-19:00\nTHURSDAY 19:00-20:00\nL Mouatadid\nBA 1180\nBA 1180\nBA 1180\n120", "Campus" : "St. George" } ], "Title" : "CSC373H1: Algorithm Design, Analysis & Complexity" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7f7" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Theories and algorithms that capture (or approximate) some of the core elements of computational intelligence. Topics include: search; logical representations and reasoning, classical automated planning, representing and reasoning with uncertainty, learning, decision making (planning) under uncertainty. Assignments provide practical experience, both theory and programming, of the core topics.", "recommended" : "CSC324H1", "short_description" : "Introduction to Artificial Intelligence[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC384H1", "prerequisite" : "SC263H1/CSC265H1, STA247H1/STA255H1/STA257H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7f9" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Introduction to techniques involving natural language and speech in applications such as information retrieval, extraction, and filtering;intelligent Web searching; spelling and grammar checking; speech recognition and synthesis; and multi-lingual systems including machine translation.N-grams, POS-tagging, semantic distance metrics, indexing, on-line lexicons and thesauri, markup languages, collections of on-line documents, corpus analysis. PERL and other software.", "recommended" : "MAT221H1/MAT223H1/MAT240H1 is strongly recommended", "short_description" : "Natural Language Computing[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC401H1", "prerequisite" : "SC207H1/CSC209H1; STA247H1/STA255H1/STA257H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7fa" }, "breadth" : "Creative and Cultural Representations (1)", "long_description" : "Concepts and techniques for the design and development of electronic games.History, social issues and story elements. The business of game development and game promotion. Software engineering, artificial intelligence and graphics elements. Level and model design. Audio elements. Practical assignments leading to team implementation of a complete game.", "short_description" : "Introduction to Video Game Design[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC404H1", "prerequisite" : "CSC301H1/CSC318H1/CSC384H1/CSC418H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7fb" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Concepts and state of the art techniques in quality assessment for software engineering; quality attributes; formal specifications and their analysis;testing, verification and validation.", "recommended" : "CSC330H1", "short_description" : "Software Testing and Verification[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC410H1", "prerequisite" : "CSC207H1,CSC236H1/CSC240H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7fc" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "An introduction to methods for automated learning of relationships on the basis of empirical data. Classification and regression using nearest neighbour methods, decision trees, linear models, and neural networks. Clustering algorithms. Problems of overfitting and of assessing accuracy. Problems withhandling large databases.", "recommended" : "SC336H1/CSC350H1", "short_description" : "Machine Learning and Data Mining[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC411H1", "prerequisite" : "SC263H1/CSC265H1, MAT(135H1,136H1)/MAT137Y1/MAT137Y1/MAT157Y1, STA247H1/STA255H1(crs_st a.htm#STA255H1)/STA257H1,STA248H1/STA250H1/STA261H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7fd" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "An introduction to probability as a means of representing and reasoning withuncertain knowledge. Qualitative and quantitative specification of probability distributions using probabilistic graphical models. Algorithms for inference and probabilistic reasoning with graphical models. Statistical approaches and algorithms for learning probability models from empirical data. Applications of these models in artificial intelligence and machine learning.", "short_description" : "Probabilistic Learning and Reasoning[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC412H1", "prerequisite" : "CSC411H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7fe" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Identification and characterization of the objects manipulated in computer graphics, the operations possible on these objects, efficient algorithms to perform these operations, and interfaces to transform one type of object to another. Display devices, display data structures and procedures, graphical input, object modelling, transformations, illumination models, primary and secondary light effects; graphics packages and systems. Students, individually or in teams, implement graphical algorithms or entire graphics systems.", "recommended" : "MAT237Y1,MAT244H1", "short_description" : "Computer Graphics[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC418H1", "prerequisite" : "CSC336H1/CSC350H1/CSC351H1/CSC363H1/CSC365H1/CSC373H1/CSC375H1/CSC463H1,(MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1,CSC209H1/proficiency in C or C++ Prerequisite for Engineering students only:ECE345H1(Electrical_and_Computer_Engineering.html#ECE345H1) or ECE352H1(Electrical_and_Computer_Engineering.html#ECE352H1)" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e7ff" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Introduction to basic concepts in computer vision. Extraction of image features at multiple scales. Robust estimation of model parameters. Multiview geometry and reconstruction. Image motion estimation and tracking. Object recognition. Topics in scene understanding as time permits.", "recommended" : "CSC320H1", "short_description" : "Introduction to Image Understanding[24L/12P]", "distribution" : "This is a Science course", "course_code" : "CSC420H1", "prerequisite" : "CSC260H1/CSC263H1/CSC265H1,(MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1, MAT221H1/MAT223H1(crs_mat.ht m#MAT223H1)/MAT240H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e800" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Understanding human behaviour as it applies to user interfaces: work activity analysis, observational techniques, questionnaire administration and unobtrusive measures. Operating parameters of the human cognitive system, task analysis and cognitive modelling techniques and their application to designing interfaces. Interface representations and prototyping tools. Cognitive walkthroughs, usability studies and verbal protocol analysis. Case studies of specific user interfaces.", "recommended" : "A course in PSY; CSC209H1", "short_description" : "Human-Computer Interaction[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC428H1", "prerequisite" : "CSC318H1; STA247H1/STA255H1/STA257H1,(STA248H1/STA250H1/STA261H1)/(PSY201H1,PSY202H1)/(SOC202H1,SOC300H1);CSC209H1/proficiency C++ or Java" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e801" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC351H1", "distribution" : "This is a Science course", "recommended" : "MAT235Y1/MAT237Y1/MAT257Y1", "short_description" : "Numerical Algorithms[24L/12T]", "course_code" : "CSC436H1", "long_description" : "Numerical algorithms for the algebraic eigenvalue problem, approximation,integration, and the solution of ordinary differential equations. Emphasis is on the convergence, stability and efficiency properties of the algorithms.", "prerequisite" : "SC336H1/CSC350H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e802" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "MAT309H1; PHL344H1", "long_description" : "Computable functions, Church's thesis, unsolvable problems, recursively enumerable sets. Predicate calculus, including the completeness, compactness,and Lowenheim-Skolem theorems. Formal theories and the Godel Incompleteness Theorem. Ordinarily offered in years alternating withCSC448H1.", "short_description" : "Computability and Logic[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC438H1", "prerequisite" : "(CSC363H1/CSC463H1)/CSC365H1/CSC373H1/CSC375H1/MAT247H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e803" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Implementation of database management systems. Storage management, indexing,query processing, concurrency control, transaction management. Database systems on parallel and distributed architectures. Modern database applications: data mining, data warehousing, OLAP, data on the web. Object-oriented and object-relational databases.", "short_description" : "Database System Technology[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC443H1", "prerequisite" : "CSC343H1,CSC369H1,CSC373H1/CSC375H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e804" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Finite difference methods for hyperbolic and parabolic equations; consistency,convergence, and stability. Finite element methods for 2-point boundary value problems and elliptic equations. Special problems of interest. Ordinarily offered in years alternating with CSC456H1.", "short_description" : "Computational Methods for Partial Differential Equations[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC446H1", "prerequisite" : "SC351H1/(CSC336H1(75%))/equivalent mathematical background;MAT237Y1/MAT257Y1; APM346H1/APM351Y1/(MAT244H1( #MAT244H1)/MAT267H1 and exposure to PDEs)" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e805" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Regular, deterministic, context free, context sensitive, and recursively enumerable languages via generative grammars and corresponding automata (finite state machines, push down machines, and Turing machines). Topics include complexity bounds for recognition, language decision problems and operations on languages. Ordinarily offered in years alternating withCSC438H1.", "short_description" : "Formal Languages and Automata[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC448H1", "prerequisite" : "SC236H1/CSC240H1, CSC363H1/CSC365H1/CSC463H1/MAT247H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e806" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "The software and internet industries; principles of operation for successful software enterprises; innovation and entrepreneurship; software business definition and planning; business models, market and product planning; product development, marketing, sales, and and support; financial management and financing of high-technology ventures; management, leadership, and partnerships. Students will all write business plans in teams.", "short_description" : "The Business of Software[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC454H1", "prerequisite" : "Five CSC half-courses at the 200-level or higher" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e807" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Computationally-intensive applications in science and engineering are implemented on the fastest computers available, today composed of many processors operating in parallel. Parallel computer architectures;implementation of numerical algorithms on parallel architectures. Topics from:performance evaluation; scientific visualization; numerical methods;applications from science and engineering. For students in computer science,applied mathematics, science, engineering. Ordinarily offered in years alternating with CSC446H1.", "short_description" : "High-Performance Scientific Computing[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC456H1", "prerequisite" : "SC350H1/(CSC336H1(75%))/equivalent mathematical background;CSC209H1/proficiency in C, C++ or Fortran" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e808" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Computer networks with an emphasis on systems programming of real networks and applications. An overview of networking basics; layering, packet switching fundamentals, socket programming, protocols, congestion control, routing,network security, wireless networks, multimedia, web 2.0, and online social networks.", "short_description" : "Computer Networking Systems[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC458H1", "prerequisite" : "CSC209H1,CSC258H1,CSC263H1/CSC265H1, STA247H1/STA255H1/STA257H1/ECO227Y1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e809" }, "breadth" : "The Physical and Mathematical Universes (5)", "exclusion" : "CSC363H1, CSC365H1", "long_description" : "Introduction to the theory of computability: Turing machines and other models of computation, Church's thesis, computable and noncomputable functions,recursive and recursively enumerable sets, many-one reductions. Introduction to complexity theory: P, NP, polynomial time reducibility, NP-completeness,self-reducibility, space complexity (L, NL, PSPACE and completeness for those classes), hierarchy theorems and provably intractable problems.", "short_description" : "Computational Complexity and Computability[24L/12P]", "distribution" : "This is a Science course", "course_code" : "CSC463H1", "prerequisite" : "SC236H1/CSC240H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e80a" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "An in-depth exploration of the major components of operating systems with an emphasis on the techniques, algorithms, and structures used to implement these components in modern systems. Project-based study of process management,scheduling, memory management, file systems, and networking is used to build insight into the intricacies of a large concurrent system.", "short_description" : "Operating Systems Design and Implementation[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC469H1", "prerequisite" : "CSC369H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e80b" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Computational linguistics and the understanding of language by computer.Possible topics include: augmented context-free grammars; chart parsing,statistical parsing; semantics and semantic interpretation; ambiguity resolution techniques; discourse structure and reference resolution. Emphasis on statistical learning methods for lexical, syntactic and semantic knowledge.", "recommended" : "CSC324H1/CSC330H1/CSC384H1", "short_description" : "Computational Linguistics[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC485H1", "prerequisite" : "STA247H1/STA255H1/STA257H1 or familiarity with basic probability theory; CSC209H1 or proficiency in C++, Java, or Python" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e80c" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Representing knowledge symbolically in a form suitable for automated reasoning, and associated reasoning methods. Topics from: first-order logic,entailment, the resolution method, Horn clauses, procedural representations,production systems, description logics, inheritance networks, defaults and probabilities, tractable reasoning, abductive explanation, the representation of action, planning.", "recommended" : "CSC330H1", "short_description" : "Knowledge Representation and Reasoning[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC486H1", "prerequisite" : "CSC384H1, CSC363H1/CSC365H1/CSC373H1(c rs_csc.htm#CSC373H1)/CSC375H1/CSC463H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e80d" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "Compiler organization, compiler writing tools, use of regular expressions,finite automata and context-free grammars, scanning and parsing, runtime organization, semantic analysis, implementing the runtime model, storage allocation, code generation.", "short_description" : "Compilers and Interpreters[24L/12T]", "distribution" : "This is a Science course", "course_code" : "CSC488H1", "prerequisite" : "CSC258H1,CSC324H1,CSC263H1/CSC265H1" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e80f" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "This half-course gives students experience solving a substantial problem that may span several areas of Computer Science. Students will define the scope of the problem, develop a solution plan, produce a working implementation, and present their work using written, oral, and (if suitable) video reports. Class time will focus on the project, but may include some lectures. The class will be small and highly interactive. Project themes change each year. Contact the Computer Science Undergraduate Office for information about this year's topic themes, required preparation and course enrolment procedures. Not eligible for CR/NCR option.", "short_description" : "Capstone Design Project[48L]", "distribution" : "This is a Science course", "course_code" : "CSC490H1", "prerequisite" : "Permission of the instructor" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e810" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "This half-course gives students experience solving a substantial problem that may span several areas of Computer Science. Students will define the scope of the problem, develop a solution plan, produce a working implementation, and present their work using written, oral, and (if suitable) video reports. Class time will focus on the project, but may include some lectures. The class will be small and highly interactive. Project themes change each year. Contact the Computer Science Undergraduate Office for information about this year's topic themes, required preparation and course enrolment procedures. Not eligible for CR/NCR option.", "short_description" : "Capstone Design Project[48L]", "distribution" : "This is a Science course", "course_code" : "CSC491H1", "prerequisite" : "Permission of the instructor" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e811" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "This half-course involves a significant project in any area of Computer Science. The project may be undertaken individually or in small groups. The course is offered by arrangement with a Computer Science faculty member. Not eligible for CR/NCR option.", "short_description" : "Computer Science Project[TBA]", "distribution" : "This is a Science course", "course_code" : "CSC494H1", "prerequisite" : "Three 300-/400-level CSC half-courses, and permission of the Associate Chair, Undergraduate Studies. Contact the Computer Science Undergraduate Office for information about course enrolment procedures.", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "400/D", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\n9999", "Campus" : "St. George" }, { "Term" : "2014 Fall", "session_type" : "Y", "Last updated" : "2014-07-15 14:53:20.0", "session_code" : "20149", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nSTAFF\n9999\n0", "Campus" : "St. George" }, { "Term" : "2015 Winter", "session_type" : "Y", "Last updated" : "2014-07-15 17:53:18.0", "session_code" : "20151", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nSTAFF\n9999\n0", "Campus" : "St. George" } ], "Title" : "CSC494H1: Computer Science Project" },{ "_id" : { "$oid" : "53c5b143bf1ee3a1f232e812" }, "breadth" : "The Physical and Mathematical Universes (5)", "long_description" : "This half-course involves a significant project in any area of Computer Science. The project may be undertaken individually or in small groups. The course is offered by arrangement with a Computer Science faculty member. Not eligible for CR/NCR option.", "short_description" : "Computer Science Project[TBA]", "distribution" : "This is a Science course", "course_code" : "CSC495H1", "prerequisite" : "Three 300-/400-level CSC half-courses, and permission of the Associate Chair, Undergraduate Studies. Contact the Computer Science Undergraduate Office for information about course enrolment procedures.", "Department" : "Computer Science", "Division" : "Faculty of Arts and Science", "Level" : "400/D", "session_data" : [ { "Term" : "2014 Summer Y", "session_type" : "Y", "Last updated" : "2014-07-15 12:53:20.0", "session_code" : "20145", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\n9999", "Campus" : "St. George" }, { "Term" : "2014 Fall", "session_type" : "Y", "Last updated" : "2014-07-15 14:53:20.0", "session_code" : "20149", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nSTAFF\n9999\n0", "Campus" : "St. George" }, { "Term" : "2015 Winter", "session_type" : "Y", "Last updated" : "2014-07-15 17:53:18.0", "session_code" : "20151", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nSTAFF\n9999\n0", "Campus" : "St. George" } ], "Title" : "CSC495H1: Computer Science Project" },{ "_id" : { "$oid" : "53cc76f6fe316773e8d81f79" }, "Division" : "Faculty of Applied Science & Engineering", "Course Description" : "The first of two courses that introduces students to programming and computational thinking, and prepares them for additional study across a breadth of programming fields. Students will learn to use the Python programming language to design and implement computational solutions to problems drawn from their 1F courses, with specific focus on algorithms, data structures, problem decomposition, and the use of programming paradigms appropriate to the problems being solved. Specifically, this course aims to have students work with and understand profiling and runtime analysis, searching and sorting algorithms, and the use of recursion.", "Level" : "100/A", "Title" : "CSC180H1: Introduction to Computer Programming", "Department" : "Division of Engineering Science", "course_code" : "CSC180H1", "session_data" : { "Last updated" : "2014-07-20 21:53:21.0", "Term" : "2014 Fall", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nMONDAY 17:00-18:00\nTUESDAY 17:00-18:00\nWEDNESDAY 16:00-17:00\nBA 1130\nSF 1105\nSF 1105\n155\nLec 0102\nMONDAY 16:00-17:00\nTHURSDAY 16:00-17:00\nWEDNESDAY 17:00-18:00\nMP 103\nMP 103\nMB 128\n155\nLec 0103\nMONDAY 16:00-17:00\nTUESDAY 17:00-18:00\nWEDNESDAY 16:00-17:00\nRS 211\nRS 211\nRS 211\n108\nPra 0101\nWEDNESDAY 09:00-12:00\nWEDNESDAY 09:00-12:00\nSF 1012\nSF 1013\n108\nPra 0102\nFRIDAY 15:00-18:00\nFRIDAY 15:00-18:00\nSF 1012\nSF 1013\n108\nPra 0103\nTUESDAY 09:00-12:00\nTUESDAY 09:00-12:00\nSF 1012\nSF 1013\n107", "session_code" : "F", "Campus" : "St. George" } },{ "_id" : { "$oid" : "53cc76fcfe316773e8d81f7a" }, "Division" : "Faculty of Applied Science & Engineering", "Course Description" : "Study of programming styles and paradigms. Included are object-oriented scripting functional and logic-based approaches. Languages that support these programming styles will be introduced. Languages treated include Python, Lisp or Scheme and Prolog.", "Exclusion" : "CSC324H1", "Title" : "CSC326H1: Programming Languages", "Level" : "300/C", "Department" : "Edward S. Rogers Sr. Dept. of Electrical & Computer Engin.", "course_code" : "CSC326H1", "session_data" : { "Last updated" : "2014-07-20 21:53:21.0", "Term" : "2014 Fall", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nMONDAY 10:00-11:00\nTHURSDAY 10:00-11:00\nTUESDAY 11:00-12:00\nGB 244\nGB 244\nGB 244\n90\nPra 0101\nWEDNESDAY 12:00-15:00 Alternate week\nGB 243\n45\nPra 0102\nFRIDAY 15:00-18:00 Alternate week\nGB 243\n45\nTut 0101\nFRIDAY 11:00-12:00\nBA 2145\n45\nTut 0102\nMONDAY 13:00-14:00\nBA 2155\n45", "session_code" : "F", "Campus" : "St. George" } },{ "_id" : { "$oid" : "53cc76fffe316773e8d81f7b" }, "Division" : "Faculty of Applied Science & Engineering", "Course Description" : "The software development process. Software requirements and specifications. Software design techniques. Techniques for developing large software systems; CASE tools and software development environments. Software testing, documentation and maintenance.", "Level" : "400/D", "Title" : "CSC444H1: Software Engineering I", "Department" : "Edward S. Rogers Sr. Dept. of Electrical & Computer Engin.", "course_code" : "CSC444H1", "session_data" : { "Last updated" : "2014-07-20 21:53:21.0", "Term" : "2014 Fall", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nMONDAY 15:00-18:00\nM AbdELRazik Mansour AbdELK\nWB 219\n60\nPra 0101\nTUESDAY 15:00-18:00\nGB 251\n30\nPra 0102\nFRIDAY 15:00-18:00\nGB 251\n30\nTut 0101\nFRIDAY 11:00-12:00\nBA 3008\n30\nTut 0102\nTUESDAY 14:00-15:00\nBA 3012\n30", "session_code" : "F", "Campus" : "St. George" } },{ "_id" : { "$oid" : "53cc7703fe316773e8d81f7c" }, "Division" : "Faculty of Applied Science & Engineering", "Course Description" : "Compiler organization, compiler writing tools, use of regular expressions, finite automata and context-free grammars, scanning and parsing, runtime organization, semantic analysis, implementing the runtime model, storage allocation, code generation.", "Level" : "400/D", "Title" : "CSC467H1: Compilers and Interpreters", "Department" : "Edward S. Rogers Sr. Dept. of Electrical & Computer Engin.", "course_code" : "CSC467H1", "session_data" : { "Last updated" : "2014-07-20 21:53:21.0", "Term" : "2014 Fall", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nFRIDAY 12:00-13:00\nTHURSDAY 12:00-13:00\nTUESDAY 12:00-13:00\nBA 1240\nBA 1240\nBA 1240\n50\nPra 0101\nTUESDAY 15:00-18:00 Alternate week\nGB 243\n50\nTut 0101\nMONDAY 16:00-17:00\nBA 2145\n50", "session_code" : "F", "Campus" : "St. George" } },{ "_id" : { "$oid" : "53cc7ce7fe316773e8d820a9" }, "Division" : "Faculty of Applied Science & Engineering", "Course Description" : "The second of two courses that introduces students to programming and computational thinking, and prepares them for additional study across a breadth of programming fields. Students will learn to use the C programming language to design and implement computational solutions to problems drawn from their 1S courses, and will explore new programming paradigms, algorithm design techniques, and data structures appropriate to these challenges. Specifically, this course aims to have students work with and understand linked lists, stacks, queues, trees, heaps, hashing, pointers (including function pointers) and arrays, data types and bit operations, and dynamic memory management.", "Level" : "100/A", "Title" : "CSC190H1: Computer Algorithms and Data Structures", "Department" : "Division of Engineering Science", "course_code" : "CSC190H1", "session_data" : { "Last updated" : "2014-07-20 21:53:21.0", "Term" : "2015 Winter", "Session" : "Activity Day and Time Instructor Location Class Size Current Enrolment Waitlist\nLec 0101\nMONDAY 11:00-12:00\nTHURSDAY 14:00-15:00\nTUESDAY 11:00-12:00\nSF 1101\nSF 1101\nSF 1101\n165\nLec 0102\nFRIDAY 10:00-11:00\nMONDAY 17:00-18:00\nTUESDAY 12:00-13:00\nBA 1130\nBA 1130\nBA 1130\n165\nPra 0101\nMONDAY 16:00-19:00\nMONDAY 16:00-19:00\nSF 1012\nSF 1013\n165\nPra 0102\nTUESDAY 16:00-19:00\nTUESDAY 16:00-19:00\nSF 1012\nSF 1013\n165", "session_code" : "S", "Campus" : "St. George" } }];